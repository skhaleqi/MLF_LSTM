%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 169 152 
%%LanguageLevel: 2
%%Creator: CorelDRAW
%%Title: Figure1.eps
%%CreationDate: Sat Aug  2 11:35:40 2025
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW Version 24.4.0.636
/EpsFile true def
%%BeginResource: procset wCorel24Dict 24.0 0
/wCorel24Dict 300 dict def wCorel24Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel24Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 168 153
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
%PushMappingMode
@rs
@gs
1.438583 1.120252 Tl
1.000000 1.000000 scale
-1.438583 -1.120252 Tl
0.219969 0.060094 Tl
@sm
@sv

@rax %Note: Object
68.30844 4.08076 68.30957 147.66605 @E
/$fm 1 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_outline
0 1.50009 1.50009 0.00000 @w
68.30901 147.66605 m
68.30901 4.08076 L
S

@rax %Note: Object
100.95420 2.48655 100.95534 146.07184 @E
/$fm 1 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_outline
0 1.50009 1.50009 0.00000 @w
100.95477 146.07184 m
100.95477 2.48655 L
S

@rax %Note: Object
60.04942 46.71156 75.47414 107.10198 @E
/$fm 0 def
 0 O 0 @g
0.0000 0.0000 0.0000 0.0000  create_cmyk_color set_solid_fill
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_outline
0 0.56693 0.56693 0.00000 @w
60.04942 107.10198 m
75.47414 107.10198 L
75.47414 46.71156 L
60.04942 46.71156 L
60.04942 107.10198 L
@c
B

@rax %Note: Object
93.78964 45.11735 109.21436 105.50778 @E
/$fm 0 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_outline
0 0.56693 0.56693 0.00000 @w
109.21436 105.50778 m
93.78964 105.50778 L
93.78964 45.11735 L
109.21436 45.11735 L
109.21436 105.50778 L
@c
B

@rax %Note: Object
17.17002 2.53417 66.79616 7.80378 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
17.74120 5.79061 m
17.73666 5.22369 L
17.17002 5.22794 L
17.17455 5.79487 L
17.74120 5.79061 L
@c
20.00835 5.77361 m
20.00381 5.20668 L
19.43717 5.21093 L
19.44170 5.77786 L
20.00835 5.77361 L
@c
22.27550 5.75660 m
22.27096 5.18967 L
21.70431 5.19392 L
21.70885 5.76085 L
22.27550 5.75660 L
@c
24.54321 5.73959 m
24.53868 5.17266 L
23.97175 5.17691 L
23.97628 5.74384 L
24.54321 5.73959 L
@c
26.81093 5.72230 m
26.80639 5.15537 L
26.23946 5.15962 L
26.24400 5.72655 L
26.81093 5.72230 L
@c
29.07865 5.70501 m
29.07411 5.13808 L
28.50718 5.14233 L
28.51172 5.70926 L
29.07865 5.70501 L
@c
31.34636 5.68772 m
31.34183 5.12079 L
30.77490 5.12504 L
30.77943 5.69197 L
31.34636 5.68772 L
@c
33.61408 5.67043 m
33.60954 5.10350 L
33.04261 5.10775 L
33.04715 5.67468 L
33.61408 5.67043 L
@c
35.88180 5.65313 m
35.87726 5.08620 L
35.31033 5.09046 L
35.31487 5.65739 L
35.88180 5.65313 L
@c
38.14951 5.63584 m
38.14498 5.06891 L
37.57805 5.07317 L
37.58258 5.64009 L
38.14951 5.63584 L
@c
40.41723 5.61855 m
40.41269 5.05162 L
39.84576 5.05587 L
39.85030 5.62280 L
40.41723 5.61855 L
@c
42.68494 5.60126 m
42.68041 5.03433 L
42.11348 5.03858 L
42.11802 5.60551 L
42.68494 5.60126 L
@c
44.95266 5.58397 m
44.94813 5.01704 L
44.38120 5.02129 L
44.38573 5.58822 L
44.95266 5.58397 L
@c
47.22038 5.56668 m
47.21584 4.99975 L
46.64891 5.00400 L
46.65345 5.57093 L
47.22038 5.56668 L
@c
49.48809 5.54939 m
49.48356 4.98246 L
48.91663 4.98671 L
48.92117 5.55364 L
49.48809 5.54939 L
@c
51.75581 5.53209 m
51.75128 4.96517 L
51.18435 4.96942 L
51.18888 5.53635 L
51.75581 5.53209 L
@c
54.02353 5.51480 m
54.01899 4.94787 L
53.45206 4.95213 L
53.45660 5.51906 L
54.02353 5.51480 L
@c
56.29124 5.49751 m
56.28671 4.93058 L
55.71978 4.93483 L
55.72431 5.50176 L
56.29124 5.49751 L
@c
58.55896 5.47994 m
58.55443 4.91301 L
57.98750 4.91726 L
57.99203 5.48419 L
58.55896 5.47994 L
@c
60.82668 5.46208 m
60.82214 4.89515 L
60.25521 4.89969 L
60.25975 5.46661 L
60.82668 5.46208 L
@c
62.02630 7.80378 m
66.79616 5.13241 L
61.98605 2.53417 L
62.02630 7.80378 L
@c
F

@rax %Note: Object
102.46762 0.93997 152.09376 6.20957 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
151.52712 3.62948 m
151.52258 4.19641 L
152.08923 4.20066 L
152.09376 3.63373 L
151.52712 3.62948 L
@c
149.25997 3.61247 m
149.25543 4.17940 L
149.82208 4.18365 L
149.82661 3.61672 L
149.25997 3.61247 L
@c
146.99282 3.59546 m
146.98828 4.16239 L
147.55493 4.16665 L
147.55946 3.59972 L
146.99282 3.59546 L
@c
144.72510 3.57846 m
144.72057 4.14539 L
145.28750 4.14964 L
145.29203 3.58271 L
144.72510 3.57846 L
@c
142.45739 3.56117 m
142.45285 4.12809 L
143.01978 4.13235 L
143.02431 3.56542 L
142.45739 3.56117 L
@c
140.18967 3.54387 m
140.18513 4.11080 L
140.75206 4.11506 L
140.75660 3.54813 L
140.18967 3.54387 L
@c
137.92195 3.52658 m
137.91742 4.09351 L
138.48435 4.09776 L
138.48888 3.53083 L
137.92195 3.52658 L
@c
135.65424 3.50929 m
135.64970 4.07622 L
136.21663 4.08047 L
136.22117 3.51354 L
135.65424 3.50929 L
@c
133.38652 3.49200 m
133.38198 4.05893 L
133.94891 4.06318 L
133.95345 3.49625 L
133.38652 3.49200 L
@c
131.11880 3.47471 m
131.11427 4.04164 L
131.68120 4.04589 L
131.68573 3.47896 L
131.11880 3.47471 L
@c
128.85109 3.45742 m
128.84655 4.02435 L
129.41348 4.02860 L
129.41802 3.46167 L
128.85109 3.45742 L
@c
126.58337 3.44013 m
126.57883 4.00706 L
127.14576 4.01131 L
127.15030 3.44438 L
126.58337 3.44013 L
@c
124.31565 3.42283 m
124.31112 3.98976 L
124.87805 3.99402 L
124.88258 3.42709 L
124.31565 3.42283 L
@c
122.04794 3.40554 m
122.04340 3.97247 L
122.61033 3.97672 L
122.61487 3.40980 L
122.04794 3.40554 L
@c
119.78022 3.38825 m
119.77569 3.95518 L
120.34261 3.95943 L
120.34715 3.39250 L
119.78022 3.38825 L
@c
117.51250 3.37096 m
117.50797 3.93789 L
118.07490 3.94214 L
118.07943 3.37521 L
117.51250 3.37096 L
@c
115.24479 3.35367 m
115.24025 3.92060 L
115.80718 3.92485 L
115.81172 3.35792 L
115.24479 3.35367 L
@c
112.97707 3.33638 m
112.97254 3.90331 L
113.53946 3.90756 L
113.54400 3.34063 L
112.97707 3.33638 L
@c
110.70935 3.31880 m
110.70482 3.88573 L
111.27175 3.88998 L
111.27628 3.32306 L
110.70935 3.31880 L
@c
108.44164 3.30094 m
108.43710 3.86787 L
109.00403 3.87241 L
109.00857 3.30548 L
108.44164 3.30094 L
@c
107.27773 0.93997 m
102.46762 3.53820 L
107.23748 6.20957 L
107.27773 0.93997 L
@c
F

@rax %Note: Object
0.78265 3.56117 14.34302 9.49720 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
4.15077 3.68107 m
0.78265 3.68107 L
0.78265 9.49720 L
1.55083 9.49720 L
1.55083 4.36904 L
4.15077 4.36904 L
4.15077 3.68107 L
@c
8.29474 5.86517 m
8.29474 5.12901 8.11899 4.56094 7.76693 4.16098 C
7.41487 3.76101 6.94290 3.56117 6.35074 3.56117 C
5.74299 3.56117 5.27074 3.76894 4.91896 4.17713 C
4.57483 4.59298 4.39880 5.15310 4.39880 5.86517 C
4.39880 6.59310 4.57483 7.15294 4.93483 7.56113 C
5.29483 7.96110 5.76680 8.16917 6.35074 8.16917 C
6.94290 8.16917 7.41487 7.96110 7.76693 7.56113 C
8.11899 7.16117 8.29474 6.59310 8.29474 5.86517 C
@c
7.53477 5.86517 m
7.53477 6.42501 7.43896 6.84907 7.23090 7.12120 C
7.02283 7.39304 6.73483 7.53704 6.35074 7.53704 C
5.96693 7.53704 5.67099 7.39304 5.46293 7.12120 C
5.26280 6.84907 5.15877 6.42501 5.15877 5.86517 C
5.15877 5.31298 5.26280 4.89713 5.46293 4.61707 C
5.67099 4.33701 5.96693 4.19301 6.35074 4.19301 C
6.72690 4.19301 7.02283 4.32907 7.23090 4.60913 C
7.43896 4.88920 7.53477 5.30504 7.53477 5.86517 C
@c
14.34302 8.04104 m
13.23099 3.68107 L
12.55096 3.68107 L
11.48683 7.04098 L
10.43093 3.68107 L
9.75090 3.68107 L
8.63887 8.04104 L
9.39883 8.04104 L
10.17496 4.66498 L
11.20706 8.04104 L
11.81509 8.04104 L
12.87893 4.66498 L
13.59893 8.04104 L
14.34302 8.04104 L
@c
F

@rax %Note: Object
150.19597 1.96696 163.75635 7.90299 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
153.56409 2.08687 m
150.19597 2.08687 L
150.19597 7.90299 L
150.96416 7.90299 L
150.96416 2.77483 L
153.56409 2.77483 L
153.56409 2.08687 L
@c
157.70806 4.27096 m
157.70806 3.53480 157.53231 2.96674 157.18025 2.56677 C
156.82819 2.16680 156.35622 1.96696 155.76406 1.96696 C
155.15631 1.96696 154.68406 2.17474 154.33228 2.58293 C
153.98816 2.99877 153.81213 3.55890 153.81213 4.27096 C
153.81213 4.99890 153.98816 5.55874 154.34816 5.96693 C
154.70816 6.36690 155.18013 6.57496 155.76406 6.57496 C
156.35622 6.57496 156.82819 6.36690 157.18025 5.96693 C
157.53231 5.56696 157.70806 4.99890 157.70806 4.27096 C
@c
156.94809 4.27096 m
156.94809 4.83080 156.85228 5.25487 156.64422 5.52699 C
156.43616 5.79883 156.14816 5.94283 155.76406 5.94283 C
155.38025 5.94283 155.08431 5.79883 154.87625 5.52699 C
154.67613 5.25487 154.57209 4.83080 154.57209 4.27096 C
154.57209 3.71877 154.67613 3.30293 154.87625 3.02287 C
155.08431 2.74280 155.38025 2.59880 155.76406 2.59880 C
156.14022 2.59880 156.43616 2.73487 156.64422 3.01493 C
156.85228 3.29499 156.94809 3.71083 156.94809 4.27096 C
@c
163.75635 6.44683 m
162.64431 2.08687 L
161.96428 2.08687 L
160.90016 5.44677 L
159.84425 2.08687 L
159.16422 2.08687 L
158.05219 6.44683 L
158.81216 6.44683 L
159.58828 3.07077 L
160.62038 6.44683 L
161.22841 6.44683 L
162.29225 3.07077 L
163.01225 6.44683 L
163.75635 6.44683 L
@c
F

@rax %Note: Object
21.52885 145.39550 67.32227 150.66510 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
22.10003 148.64854 m
22.09550 148.08161 L
21.52885 148.08614 L
21.53339 148.65307 L
22.10003 148.64854 L
@c
24.36718 148.63011 m
24.36265 148.06318 L
23.79600 148.06772 L
23.80054 148.63465 L
24.36718 148.63011 L
@c
26.63433 148.61169 m
26.62980 148.04476 L
26.06315 148.04929 L
26.06769 148.61622 L
26.63433 148.61169 L
@c
28.90176 148.59326 m
28.89723 148.02633 L
28.33030 148.03087 L
28.33483 148.59780 L
28.90176 148.59326 L
@c
31.16948 148.57483 m
31.16494 148.00791 L
30.59802 148.01244 L
30.60255 148.57937 L
31.16948 148.57483 L
@c
33.43720 148.55641 m
33.43266 147.98948 L
32.86573 147.99402 L
32.87027 148.56094 L
33.43720 148.55641 L
@c
35.70491 148.53770 m
35.70038 147.97077 L
35.13345 147.97531 L
35.13798 148.54224 L
35.70491 148.53770 L
@c
37.97263 148.51899 m
37.96809 147.95206 L
37.40117 147.95660 L
37.40570 148.52353 L
37.97263 148.51899 L
@c
40.24035 148.50028 m
40.23581 147.93335 L
39.66888 147.93789 L
39.67342 148.50482 L
40.24035 148.50028 L
@c
42.50806 148.48157 m
42.50353 147.91465 L
41.93660 147.91918 L
41.94113 148.48611 L
42.50806 148.48157 L
@c
44.77578 148.46287 m
44.77124 147.89594 L
44.20431 147.90047 L
44.20885 148.46740 L
44.77578 148.46287 L
@c
47.04350 148.44416 m
47.03896 147.87723 L
46.47203 147.88176 L
46.47657 148.44869 L
47.04350 148.44416 L
@c
49.31121 148.42545 m
49.30668 147.85852 L
48.73975 147.86306 L
48.74428 148.42998 L
49.31121 148.42545 L
@c
51.57893 148.40674 m
51.57439 147.83981 L
51.00746 147.84435 L
51.01200 148.41128 L
51.57893 148.40674 L
@c
53.84665 148.38746 m
53.84211 147.82054 L
53.27518 147.82535 L
53.27972 148.39228 L
53.84665 148.38746 L
@c
56.11436 148.36819 m
56.10983 147.80126 L
55.54290 147.80608 L
55.54743 148.37301 L
56.11436 148.36819 L
@c
58.38208 148.34891 m
58.37754 147.78198 L
57.81061 147.78680 L
57.81515 148.35373 L
58.38208 148.34891 L
@c
60.64980 148.32964 m
60.64526 147.76271 L
60.07833 147.76753 L
60.08287 148.33446 L
60.64980 148.32964 L
@c
62.91751 148.31036 m
62.91298 147.74343 L
62.34605 147.74825 L
62.35058 148.31518 L
62.91751 148.31036 L
@c
62.55411 150.66510 m
67.32227 147.99061 L
62.51074 145.39550 L
62.55411 150.66510 L
@c
F

@rax %Note: Object
101.94151 143.80129 147.73493 149.07090 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
147.16828 146.48740 m
147.16375 147.05433 L
147.73039 147.05887 L
147.73493 146.49194 L
147.16828 146.48740 L
@c
144.90113 146.46898 m
144.89660 147.03591 L
145.46324 147.04044 L
145.46778 146.47351 L
144.90113 146.46898 L
@c
142.63398 146.45055 m
142.62945 147.01748 L
143.19609 147.02202 L
143.20063 146.45509 L
142.63398 146.45055 L
@c
140.36655 146.43213 m
140.36202 146.99906 L
140.92894 147.00359 L
140.93348 146.43666 L
140.36655 146.43213 L
@c
138.09883 146.41370 m
138.09430 146.98063 L
138.66123 146.98517 L
138.66576 146.41824 L
138.09883 146.41370 L
@c
135.83112 146.39528 m
135.82658 146.96220 L
136.39351 146.96674 L
136.39805 146.39981 L
135.83112 146.39528 L
@c
133.56340 146.37657 m
133.55887 146.94350 L
134.12580 146.94803 L
134.13033 146.38110 L
133.56340 146.37657 L
@c
131.29569 146.35786 m
131.29115 146.92479 L
131.85808 146.92932 L
131.86261 146.36239 L
131.29569 146.35786 L
@c
129.02797 146.33915 m
129.02343 146.90608 L
129.59036 146.91061 L
129.59490 146.34369 L
129.02797 146.33915 L
@c
126.76025 146.32044 m
126.75572 146.88737 L
127.32265 146.89191 L
127.32718 146.32498 L
126.76025 146.32044 L
@c
124.49254 146.30173 m
124.48800 146.86866 L
125.05493 146.87320 L
125.05946 146.30627 L
124.49254 146.30173 L
@c
122.22482 146.28302 m
122.22028 146.84995 L
122.78721 146.85449 L
122.79175 146.28756 L
122.22482 146.28302 L
@c
119.95710 146.26431 m
119.95257 146.83124 L
120.51950 146.83578 L
120.52403 146.26885 L
119.95710 146.26431 L
@c
117.68939 146.24561 m
117.68485 146.81254 L
118.25178 146.81707 L
118.25631 146.25014 L
117.68939 146.24561 L
@c
115.42167 146.22633 m
115.41713 146.79326 L
115.98406 146.79808 L
115.98860 146.23115 L
115.42167 146.22633 L
@c
113.15395 146.20706 m
113.14942 146.77398 L
113.71635 146.77880 L
113.72088 146.21187 L
113.15395 146.20706 L
@c
110.88624 146.18778 m
110.88170 146.75471 L
111.44863 146.75953 L
111.45317 146.19260 L
110.88624 146.18778 L
@c
108.61852 146.16850 m
108.61398 146.73543 L
109.18091 146.74025 L
109.18545 146.17332 L
108.61852 146.16850 L
@c
106.35080 146.14923 m
106.34627 146.71616 L
106.91320 146.72098 L
106.91773 146.15405 L
106.35080 146.14923 L
@c
106.75304 143.80129 m
101.94151 146.39641 L
106.70967 149.07090 L
106.75304 143.80129 L
@c
F

@rax %Note: Object
0.78265 144.25115 15.80683 151.98718 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
5.00683 145.90715 m
4.23071 145.90715 L
4.23071 148.75512 L
1.55083 148.75512 L
1.55083 145.90715 L
0.78265 145.90715 L
0.78265 151.72328 L
1.55083 151.72328 L
1.55083 149.44309 L
4.23071 149.44309 L
4.23071 151.72328 L
5.00683 151.72328 L
5.00683 145.90715 L
@c
6.87090 145.90715 m
6.13474 145.90715 L
6.13474 150.26712 L
6.87090 150.26712 L
6.87090 145.90715 L
@c
6.92674 151.00328 m
6.08683 151.00328 L
6.08683 151.76324 L
6.92674 151.76324 L
6.92674 151.00328 L
@c
10.58287 147.09118 m
10.58287 149.48306 L
10.39890 149.57121 10.23080 149.63528 10.07093 149.67524 C
9.91871 149.71521 9.76677 149.73109 9.61483 149.73109 C
9.23868 149.73109 8.94274 149.59502 8.73468 149.32318 C
8.51868 149.05106 8.41493 148.65902 8.41493 148.14709 C
8.41493 147.65924 8.49487 147.29102 8.65474 147.04328 C
8.81490 146.78702 9.07880 146.65918 9.44674 146.65918 C
9.63893 146.65918 9.83083 146.69915 10.03068 146.77115 C
10.23874 146.85109 10.41477 146.95512 10.58287 147.09118 C
@c
8.11077 145.21124 m
8.15868 145.18715 8.23068 145.15512 8.32677 145.12309 C
8.42287 145.09106 8.53483 145.05109 8.65474 145.02728 C
8.79080 144.98702 8.91893 144.96321 9.03090 144.93912 C
9.15080 144.92324 9.27071 144.90709 9.40677 144.90709 C
9.63071 144.90709 9.82290 144.93912 9.98277 145.00318 C
10.14293 145.05902 10.26283 145.14718 10.35071 145.25121 C
10.43887 145.35524 10.49471 145.48309 10.52674 145.61915 C
10.55877 145.76315 10.58287 145.92302 10.58287 146.09906 C
10.58287 146.48315 L
10.38274 146.31506 10.19083 146.18721 9.99893 146.10728 C
9.80674 146.01912 9.56693 145.97915 9.28687 145.97915 C
8.78287 145.97915 8.39083 146.16312 8.09490 146.53928 C
7.79868 146.90721 7.65468 147.43502 7.65468 148.13121 C
7.65468 148.49121 7.70287 148.81124 7.80690 149.09102 C
7.91093 149.37109 8.04671 149.61118 8.21480 149.80309 C
8.38290 149.99528 8.57480 150.13928 8.79874 150.24302 C
9.02268 150.33912 9.25483 150.39524 9.49493 150.39524 C
9.71887 150.39524 9.91871 150.36321 10.07887 150.31502 C
10.24668 150.25918 10.41477 150.17924 10.58287 150.08315 C
10.62283 150.26712 L
11.31080 150.26712 L
11.31080 146.40321 L
11.31080 145.65912 11.15093 145.12309 10.83090 144.77102 C
10.51087 144.42718 10.01480 144.25115 9.35093 144.25115 C
9.13493 144.25115 8.91893 144.26702 8.69471 144.30728 C
8.47077 144.33902 8.26271 144.38721 8.07080 144.44306 C
8.07080 145.21124 L
8.11077 145.21124 L
@c
15.80683 145.90715 m
15.07096 145.90715 L
15.07096 148.39512 L
15.07096 148.59524 15.06274 148.77921 15.04687 148.95524 C
15.02277 149.12306 14.99074 149.26706 14.93490 149.37109 C
14.87083 149.47512 14.79090 149.56328 14.68687 149.61118 C
14.57490 149.66702 14.43090 149.69112 14.24693 149.69112 C
14.06296 149.69112 13.87871 149.64321 13.67887 149.54712 C
13.48696 149.45102 13.29477 149.32318 13.11080 149.16302 C
13.11080 145.90715 L
12.37493 145.90715 L
12.37493 151.98718 L
13.11080 151.98718 L
13.11080 149.78721 L
13.33474 149.97912 13.55074 150.13106 13.75880 150.23509 C
13.97480 150.33912 14.19874 150.39524 14.43883 150.39524 C
14.87083 150.39524 15.20674 150.25124 15.44683 149.97118 C
15.68693 149.68318 15.80683 149.27528 15.80683 148.73924 C
15.80683 145.90715 L
@c
F

@rax %Note: Object
150.19597 142.65694 165.22016 150.39298 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
154.42016 144.31294 m
153.64403 144.31294 L
153.64403 147.16091 L
150.96416 147.16091 L
150.96416 144.31294 L
150.19597 144.31294 L
150.19597 150.12907 L
150.96416 150.12907 L
150.96416 147.84888 L
153.64403 147.84888 L
153.64403 150.12907 L
154.42016 150.12907 L
154.42016 144.31294 L
@c
156.28422 144.31294 m
155.54806 144.31294 L
155.54806 148.67291 L
156.28422 148.67291 L
156.28422 144.31294 L
@c
156.34006 149.40907 m
155.50016 149.40907 L
155.50016 150.16904 L
156.34006 150.16904 L
156.34006 149.40907 L
@c
159.99619 145.49698 m
159.99619 147.88885 L
159.81222 147.97701 159.64413 148.04107 159.48425 148.08104 C
159.33203 148.12101 159.18009 148.13688 159.02816 148.13688 C
158.65200 148.13688 158.35606 148.00082 158.14800 147.72898 C
157.93200 147.45685 157.82825 147.06482 157.82825 146.55288 C
157.82825 146.06504 157.90819 145.69682 158.06806 145.44907 C
158.22822 145.19282 158.49213 145.06498 158.86006 145.06498 C
159.05225 145.06498 159.24416 145.10494 159.44400 145.17694 C
159.65206 145.25688 159.82809 145.36091 159.99619 145.49698 C
@c
157.52409 143.61704 m
157.57200 143.59294 157.64400 143.56091 157.74009 143.52888 C
157.83619 143.49685 157.94816 143.45688 158.06806 143.43307 C
158.20413 143.39282 158.33225 143.36901 158.44422 143.34491 C
158.56413 143.32904 158.68403 143.31288 158.82009 143.31288 C
159.04403 143.31288 159.23622 143.34491 159.39609 143.40898 C
159.55625 143.46482 159.67616 143.55298 159.76403 143.65701 C
159.85219 143.76104 159.90803 143.88888 159.94006 144.02494 C
159.97209 144.16894 159.99619 144.32882 159.99619 144.50485 C
159.99619 144.88894 L
159.79606 144.72085 159.60416 144.59301 159.41225 144.51307 C
159.22006 144.42491 158.98025 144.38494 158.70019 144.38494 C
158.19619 144.38494 157.80416 144.56891 157.50822 144.94507 C
157.21200 145.31301 157.06800 145.84082 157.06800 146.53701 C
157.06800 146.89701 157.11619 147.21704 157.22022 147.49682 C
157.32425 147.77688 157.46003 148.01698 157.62813 148.20888 C
157.79622 148.40107 157.98813 148.54507 158.21206 148.64882 C
158.43600 148.74491 158.66816 148.80104 158.90825 148.80104 C
159.13219 148.80104 159.33203 148.76901 159.49219 148.72082 C
159.66000 148.66498 159.82809 148.58504 159.99619 148.48894 C
160.03616 148.67291 L
160.72413 148.67291 L
160.72413 144.80901 L
160.72413 144.06491 160.56425 143.52888 160.24422 143.17682 C
159.92419 142.83298 159.42813 142.65694 158.76425 142.65694 C
158.54825 142.65694 158.33225 142.67282 158.10803 142.71307 C
157.88409 142.74482 157.67603 142.79301 157.48413 142.84885 C
157.48413 143.61704 L
157.52409 143.61704 L
@c
165.22016 144.31294 m
164.48428 144.31294 L
164.48428 146.80091 L
164.48428 147.00104 164.47606 147.18501 164.46019 147.36104 C
164.43609 147.52885 164.40406 147.67285 164.34822 147.77688 C
164.28416 147.88091 164.20422 147.96907 164.10019 148.01698 C
163.98822 148.07282 163.84422 148.09691 163.66025 148.09691 C
163.47628 148.09691 163.29203 148.04901 163.09219 147.95291 C
162.90028 147.85682 162.70809 147.72898 162.52413 147.56882 C
162.52413 144.31294 L
161.78825 144.31294 L
161.78825 150.39298 L
162.52413 150.39298 L
162.52413 148.19301 L
162.74806 148.38491 162.96406 148.53685 163.17213 148.64088 C
163.38813 148.74491 163.61206 148.80104 163.85216 148.80104 C
164.28416 148.80104 164.62006 148.65704 164.86016 148.37698 C
165.10025 148.08898 165.22016 147.68107 165.22016 147.14504 C
165.22016 144.31294 L
@c
F

@rax %Note: Object
20.31506 44.27121 60.04942 49.54082 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
20.88737 47.51745 m
20.88170 46.95052 L
20.31506 46.95591 L
20.32072 47.52283 L
20.88737 47.51745 L
@c
23.15452 47.49591 m
23.14885 46.92898 L
22.58220 46.93436 L
22.58787 47.50129 L
23.15452 47.49591 L
@c
25.42167 47.47436 m
25.41600 46.90743 L
24.84935 46.91282 L
24.85502 47.47975 L
25.42167 47.47436 L
@c
27.68910 47.45282 m
27.68343 46.88589 L
27.11650 46.89128 L
27.12217 47.45820 L
27.68910 47.45282 L
@c
29.95682 47.43128 m
29.95115 46.86435 L
29.38422 46.86973 L
29.38989 47.43666 L
29.95682 47.43128 L
@c
32.22454 47.40973 m
32.21887 46.84280 L
31.65194 46.84819 L
31.65761 47.41512 L
32.22454 47.40973 L
@c
34.49225 47.38819 m
34.48658 46.82126 L
33.91965 46.82665 L
33.92532 47.39357 L
34.49225 47.38819 L
@c
36.75997 47.36665 m
36.75430 46.79972 L
36.18737 46.80510 L
36.19304 47.37203 L
36.75997 47.36665 L
@c
39.02769 47.34510 m
39.02202 46.77817 L
38.45509 46.78356 L
38.46076 47.35049 L
39.02769 47.34510 L
@c
41.29540 47.32356 m
41.28973 46.75663 L
40.72280 46.76202 L
40.72847 47.32894 L
41.29540 47.32356 L
@c
43.56312 47.30202 m
43.55745 46.73509 L
42.99052 46.74047 L
42.99619 47.30740 L
43.56312 47.30202 L
@c
45.83083 47.28047 m
45.82517 46.71354 L
45.25824 46.71893 L
45.26391 47.28586 L
45.83083 47.28047 L
@c
48.09855 47.25893 m
48.09288 46.69200 L
47.52595 46.69739 L
47.53162 47.26431 L
48.09855 47.25893 L
@c
50.36627 47.23710 m
50.36060 46.67017 L
49.79367 46.67556 L
49.79934 47.24249 L
50.36627 47.23710 L
@c
52.63398 47.21528 m
52.62831 46.64835 L
52.06139 46.65373 L
52.06706 47.22066 L
52.63398 47.21528 L
@c
54.90170 47.19345 m
54.89603 46.62652 L
54.32910 46.63191 L
54.33477 47.19883 L
54.90170 47.19345 L
@c
55.28466 49.54082 m
60.04942 46.86038 L
55.23449 44.27121 L
55.28466 49.54082 L
@c
F

@rax %Note: Object
109.21436 42.67701 148.94872 47.94661 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
148.38208 45.35631 m
148.37641 45.92324 L
148.94306 45.92863 L
148.94872 45.36170 L
148.38208 45.35631 L
@c
146.11493 45.33477 m
146.10926 45.90170 L
146.67591 45.90709 L
146.68157 45.34016 L
146.11493 45.33477 L
@c
143.84778 45.31323 m
143.84211 45.88016 L
144.40876 45.88554 L
144.41443 45.31861 L
143.84778 45.31323 L
@c
141.58035 45.29169 m
141.57468 45.85861 L
142.14161 45.86400 L
142.14728 45.29707 L
141.58035 45.29169 L
@c
139.31263 45.27014 m
139.30696 45.83707 L
139.87389 45.84246 L
139.87956 45.27553 L
139.31263 45.27014 L
@c
137.04491 45.24860 m
137.03924 45.81553 L
137.60617 45.82091 L
137.61184 45.25398 L
137.04491 45.24860 L
@c
134.77720 45.22706 m
134.77153 45.79398 L
135.33846 45.79937 L
135.34413 45.23244 L
134.77720 45.22706 L
@c
132.50948 45.20551 m
132.50381 45.77244 L
133.07074 45.77783 L
133.07641 45.21090 L
132.50948 45.20551 L
@c
130.24176 45.18397 m
130.23609 45.75090 L
130.80302 45.75628 L
130.80869 45.18935 L
130.24176 45.18397 L
@c
127.97405 45.16243 m
127.96838 45.72935 L
128.53531 45.73474 L
128.54098 45.16781 L
127.97405 45.16243 L
@c
125.70633 45.14088 m
125.70066 45.70781 L
126.26759 45.71320 L
126.27326 45.14627 L
125.70633 45.14088 L
@c
123.43861 45.11934 m
123.43294 45.68627 L
123.99987 45.69165 L
124.00554 45.12472 L
123.43861 45.11934 L
@c
121.17090 45.09780 m
121.16523 45.66472 L
121.73216 45.67011 L
121.73783 45.10318 L
121.17090 45.09780 L
@c
118.90318 45.07597 m
118.89751 45.64290 L
119.46444 45.64828 L
119.47011 45.08135 L
118.90318 45.07597 L
@c
116.63546 45.05414 m
116.62980 45.62107 L
117.19672 45.62646 L
117.20239 45.05953 L
116.63546 45.05414 L
@c
114.36775 45.03231 m
114.36208 45.59924 L
114.92901 45.60463 L
114.93468 45.03770 L
114.36775 45.03231 L
@c
114.02929 42.67701 m
109.21436 45.26617 L
113.97912 47.94661 L
114.02929 42.67701 L
@c
F

@rax %Note: Object
20.61439 104.55931 60.34876 109.82891 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
21.18671 107.80554 m
21.18104 107.23861 L
20.61439 107.24400 L
20.62006 107.81093 L
21.18671 107.80554 L
@c
23.45386 107.78400 m
23.44819 107.21707 L
22.88154 107.22246 L
22.88721 107.78939 L
23.45386 107.78400 L
@c
25.72101 107.76246 m
25.71534 107.19553 L
25.14869 107.20091 L
25.15436 107.76784 L
25.72101 107.76246 L
@c
27.98844 107.74091 m
27.98277 107.17398 L
27.41584 107.17937 L
27.42151 107.74630 L
27.98844 107.74091 L
@c
30.25616 107.71937 m
30.25049 107.15244 L
29.68356 107.15783 L
29.68923 107.72476 L
30.25616 107.71937 L
@c
32.52387 107.69783 m
32.51820 107.13090 L
31.95128 107.13628 L
31.95694 107.70321 L
32.52387 107.69783 L
@c
34.79159 107.67628 m
34.78592 107.10935 L
34.21899 107.11474 L
34.22466 107.68167 L
34.79159 107.67628 L
@c
37.05931 107.65474 m
37.05364 107.08781 L
36.48671 107.09320 L
36.49238 107.66013 L
37.05931 107.65474 L
@c
39.32702 107.63320 m
39.32135 107.06627 L
38.75443 107.07165 L
38.76009 107.63858 L
39.32702 107.63320 L
@c
41.59474 107.61165 m
41.58907 107.04472 L
41.02214 107.05011 L
41.02781 107.61704 L
41.59474 107.61165 L
@c
43.86246 107.59011 m
43.85679 107.02318 L
43.28986 107.02857 L
43.29553 107.59550 L
43.86246 107.59011 L
@c
46.13017 107.56857 m
46.12450 107.00164 L
45.55757 107.00702 L
45.56324 107.57395 L
46.13017 107.56857 L
@c
48.39789 107.54702 m
48.39222 106.98009 L
47.82529 106.98548 L
47.83096 107.55241 L
48.39789 107.54702 L
@c
50.66561 107.52520 m
50.65994 106.95827 L
50.09301 106.96365 L
50.09868 107.53058 L
50.66561 107.52520 L
@c
52.93332 107.50337 m
52.92765 106.93644 L
52.36072 106.94183 L
52.36639 107.50876 L
52.93332 107.50337 L
@c
55.20104 107.48154 m
55.19537 106.91461 L
54.62844 106.92000 L
54.63411 107.48693 L
55.20104 107.48154 L
@c
55.58400 109.82891 m
60.34876 107.14847 L
55.53383 104.55931 L
55.58400 109.82891 L
@c
F

@rax %Note: Object
108.91502 102.96510 148.64939 108.23471 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
148.08274 105.64441 m
148.07707 106.21134 L
148.64372 106.21672 L
148.64939 105.64980 L
148.08274 105.64441 L
@c
145.81559 105.62287 m
145.80992 106.18980 L
146.37657 106.19518 L
146.38224 105.62825 L
145.81559 105.62287 L
@c
143.54844 105.60132 m
143.54277 106.16825 L
144.10942 106.17364 L
144.11509 105.60671 L
143.54844 105.60132 L
@c
141.28101 105.57978 m
141.27534 106.14671 L
141.84227 106.15209 L
141.84794 105.58517 L
141.28101 105.57978 L
@c
139.01329 105.55824 m
139.00762 106.12517 L
139.57455 106.13055 L
139.58022 105.56362 L
139.01329 105.55824 L
@c
136.74557 105.53669 m
136.73991 106.10362 L
137.30683 106.10901 L
137.31250 105.54208 L
136.74557 105.53669 L
@c
134.47786 105.51515 m
134.47219 106.08208 L
135.03912 106.08746 L
135.04479 105.52054 L
134.47786 105.51515 L
@c
132.21014 105.49361 m
132.20447 106.06054 L
132.77140 106.06592 L
132.77707 105.49899 L
132.21014 105.49361 L
@c
129.94243 105.47206 m
129.93676 106.03899 L
130.50369 106.04438 L
130.50935 105.47745 L
129.94243 105.47206 L
@c
127.67471 105.45052 m
127.66904 106.01745 L
128.23597 106.02283 L
128.24164 105.45591 L
127.67471 105.45052 L
@c
125.40699 105.42898 m
125.40132 105.99591 L
125.96825 106.00129 L
125.97392 105.43436 L
125.40699 105.42898 L
@c
123.13928 105.40743 m
123.13361 105.97436 L
123.70054 105.97975 L
123.70620 105.41282 L
123.13928 105.40743 L
@c
120.87156 105.38589 m
120.86589 105.95282 L
121.43282 105.95820 L
121.43849 105.39128 L
120.87156 105.38589 L
@c
118.60384 105.36406 m
118.59817 105.93099 L
119.16510 105.93638 L
119.17077 105.36945 L
118.60384 105.36406 L
@c
116.33613 105.34224 m
116.33046 105.90917 L
116.89739 105.91455 L
116.90306 105.34762 L
116.33613 105.34224 L
@c
114.06841 105.32041 m
114.06274 105.88734 L
114.62967 105.89272 L
114.63534 105.32580 L
114.06841 105.32041 L
@c
113.72995 102.96510 m
108.91502 105.55427 L
113.67978 108.23471 L
113.72995 102.96510 L
@c
F

@rax %Note: Object
0.77868 44.20630 18.77868 51.75043 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
5.22680 50.96636 m
5.45074 50.71039 5.61883 50.39036 5.73874 50.01449 C
5.86658 49.63833 5.92271 49.20633 5.92271 48.71849 C
5.92271 48.24652 5.86658 47.82246 5.74668 47.44630 C
5.62677 47.06249 5.45074 46.74246 5.22680 46.48649 C
4.98671 46.21436 4.71458 46.01452 4.39483 45.88639 C
4.08274 45.75827 3.73068 45.69449 3.35480 45.69449 C
2.95483 45.69449 2.60277 45.75827 2.29068 45.89433 C
1.97065 46.02246 1.70674 46.22230 1.47458 46.48649 C
1.25065 46.74246 1.08283 47.06249 0.96265 47.43836 C
0.84274 47.81452 0.77868 48.24652 0.77868 48.71849 C
0.77868 49.21427 0.84274 49.63833 0.96265 50.00627 C
1.08283 50.38243 1.25858 50.69452 1.48280 50.96636 C
1.70674 51.22233 1.97065 51.41452 2.29068 51.55030 C
2.61071 51.68636 2.96277 51.75043 3.35480 51.75043 C
3.74683 51.75043 4.10683 51.68636 4.41865 51.54236 C
4.73868 51.40630 5.01080 51.21439 5.22680 50.96636 C
@c
5.12277 48.71849 m
5.12277 49.11052 5.08280 49.44643 4.99465 49.74236 C
4.91471 50.03830 4.79480 50.28633 4.64258 50.48646 C
4.49065 50.68630 4.30668 50.83030 4.09068 50.93433 C
3.86674 51.03836 3.62665 51.08627 3.35480 51.08627 C
3.07474 51.08627 2.82671 51.03836 2.61865 50.93433 C
2.41058 50.83852 2.22661 50.68630 2.05880 50.48646 C
1.90658 50.28633 1.79461 50.03830 1.70674 49.73443 C
1.62680 49.43849 1.58683 49.10230 1.58683 48.71849 C
1.58683 47.95852 1.74671 47.37430 2.06674 46.96639 C
2.38677 46.56643 2.81877 46.35836 3.35480 46.35836 C
3.89083 46.35836 4.32283 46.56643 4.64258 46.96639 C
4.96261 47.37430 5.12277 47.95852 5.12277 48.71849 C
@c
10.37849 48.11046 m
10.37849 47.38252 10.20274 46.80652 9.85861 46.37452 C
9.50655 45.94252 9.06661 45.72652 8.53852 45.72652 C
8.32252 45.72652 8.13061 45.75033 7.96252 45.79852 C
7.79471 45.85436 7.62661 45.92636 7.45058 46.03039 C
7.45058 44.20630 L
6.71471 44.20630 L
6.71471 50.17436 L
7.45058 50.17436 L
7.45058 49.71827 L
7.63455 49.88636 7.83468 50.02243 8.05861 50.13439 C
8.28255 50.24636 8.52265 50.30249 8.78655 50.30249 C
9.29055 50.30249 9.68258 50.10236 9.96265 49.70239 C
10.24271 49.31036 10.37849 48.78227 10.37849 48.11046 C
@c
9.61852 48.03052 m
9.61852 48.52630 9.53858 48.91039 9.37871 49.19046 C
9.22649 49.46230 8.96258 49.59836 8.61052 49.59836 C
8.40274 49.59836 8.20261 49.55046 8.00249 49.46230 C
7.81058 49.36649 7.62661 49.24630 7.45058 49.10230 C
7.45058 46.63049 L
7.64249 46.53439 7.81058 46.47033 7.94665 46.43830 C
8.08271 46.40627 8.24258 46.39039 8.41861 46.39039 C
8.79449 46.39039 9.09071 46.52646 9.30671 46.80652 C
9.51449 47.08630 9.61852 47.49449 9.61852 48.03052 C
@c
13.03455 45.71036 m
12.33865 45.71036 11.80261 45.91049 11.41852 46.30252 C
11.03471 46.69427 10.84252 47.24646 10.84252 47.97439 C
10.84252 48.67852 11.02677 49.24630 11.40265 49.67036 C
11.77058 50.08649 12.25871 50.30249 12.85852 50.30249 C
13.13065 50.30249 13.37074 50.26252 13.57852 50.18230 C
13.78658 50.10236 13.97055 49.98246 14.13071 49.81436 C
14.28265 49.64627 14.40255 49.44643 14.48277 49.20633 C
14.57065 48.96652 14.61061 48.67030 14.61061 48.31852 C
14.61061 47.91827 L
11.58661 47.91827 L
11.58661 47.41427 11.71474 47.02252 11.97071 46.75833 C
12.22668 46.48649 12.57874 46.35043 13.02661 46.35043 C
13.19471 46.35043 13.34665 46.37452 13.50652 46.40627 C
13.65874 46.44652 13.80274 46.49443 13.92265 46.55027 C
14.05871 46.60639 14.17068 46.67046 14.25855 46.72630 C
14.35465 46.78243 14.42665 46.83033 14.48277 46.87852 C
14.53068 46.87852 L
14.53068 46.07830 L
14.44252 46.04627 14.33877 46.00630 14.21065 45.95046 C
14.08252 45.90227 13.97055 45.86230 13.86652 45.83849 C
13.72252 45.79030 13.59468 45.76649 13.47477 45.74239 C
13.36252 45.72652 13.21058 45.71036 13.03455 45.71036 C
@c
13.89855 48.48633 m
13.89061 48.67852 13.86652 48.85427 13.82655 48.99827 C
13.78658 49.13433 13.72252 49.26246 13.64258 49.35827 C
13.56265 49.47052 13.45068 49.55046 13.31461 49.60630 C
13.17855 49.66243 13.01868 49.69446 12.81855 49.69446 C
12.62665 49.69446 12.45855 49.66243 12.32277 49.60630 C
12.18671 49.55046 12.05858 49.46230 11.94661 49.35033 C
11.83465 49.23836 11.75471 49.11052 11.69858 48.96652 C
11.64274 48.83046 11.60277 48.67030 11.58661 48.48633 C
13.89855 48.48633 L
@c
18.77868 45.81439 m
18.04280 45.81439 L
18.04280 48.30236 L
18.04280 48.50249 18.03458 48.68646 18.01871 48.86249 C
17.99461 49.03030 17.96258 49.17430 17.90674 49.27833 C
17.84268 49.38236 17.76274 49.47052 17.65871 49.51843 C
17.54674 49.57427 17.40274 49.59836 17.21877 49.59836 C
17.03480 49.59836 16.85055 49.55046 16.65071 49.45436 C
16.45880 49.35827 16.26661 49.23043 16.08265 49.07027 C
16.08265 45.81439 L
15.34677 45.81439 L
15.34677 50.17436 L
16.08265 50.17436 L
16.08265 49.69446 L
16.30658 49.88636 16.52258 50.03830 16.73065 50.14233 C
16.94665 50.24636 17.17058 50.30249 17.41068 50.30249 C
17.84268 50.30249 18.17858 50.15849 18.41868 49.87843 C
18.65877 49.59043 18.77868 49.18252 18.77868 48.64649 C
18.77868 45.81439 L
@c
F

@rax %Note: Object
150.19200 42.61209 168.19200 50.15622 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
154.64013 49.37216 m
154.86406 49.11619 155.03216 48.79616 155.15206 48.42028 C
155.27991 48.04413 155.33603 47.61213 155.33603 47.12428 C
155.33603 46.65231 155.27991 46.22825 155.16000 45.85209 C
155.04009 45.46828 154.86406 45.14825 154.64013 44.89228 C
154.40003 44.62016 154.12791 44.42031 153.80816 44.29219 C
153.49606 44.16406 153.14400 44.10028 152.76813 44.10028 C
152.36816 44.10028 152.01609 44.16406 151.70400 44.30013 C
151.38397 44.42825 151.12006 44.62809 150.88791 44.89228 C
150.66397 45.14825 150.49616 45.46828 150.37597 45.84416 C
150.25606 46.22031 150.19200 46.65231 150.19200 47.12428 C
150.19200 47.62006 150.25606 48.04413 150.37597 48.41206 C
150.49616 48.78822 150.67191 49.10031 150.89613 49.37216 C
151.12006 49.62813 151.38397 49.82031 151.70400 49.95609 C
152.02403 50.09216 152.37609 50.15622 152.76813 50.15622 C
153.16016 50.15622 153.52016 50.09216 153.83197 49.94816 C
154.15200 49.81209 154.42413 49.62019 154.64013 49.37216 C
@c
154.53609 47.12428 m
154.53609 47.51631 154.49613 47.85222 154.40797 48.14816 C
154.32803 48.44409 154.20813 48.69213 154.05591 48.89225 C
153.90397 49.09209 153.72000 49.23609 153.50400 49.34013 C
153.28006 49.44416 153.03997 49.49206 152.76813 49.49206 C
152.48806 49.49206 152.24003 49.44416 152.03197 49.34013 C
151.82391 49.24431 151.63994 49.09209 151.47213 48.89225 C
151.31991 48.69213 151.20794 48.44409 151.12006 48.14022 C
151.04013 47.84428 151.00016 47.50809 151.00016 47.12428 C
151.00016 46.36431 151.16003 45.78009 151.48006 45.37219 C
151.80009 44.97222 152.23209 44.76416 152.76813 44.76416 C
153.30416 44.76416 153.73616 44.97222 154.05591 45.37219 C
154.37594 45.78009 154.53609 46.36431 154.53609 47.12428 C
@c
159.79181 46.51625 m
159.79181 45.78831 159.61606 45.21231 159.27194 44.78031 C
158.91987 44.34831 158.47994 44.13231 157.95184 44.13231 C
157.73584 44.13231 157.54394 44.15613 157.37584 44.20431 C
157.20803 44.26016 157.03994 44.33216 156.86391 44.43619 C
156.86391 42.61209 L
156.12803 42.61209 L
156.12803 48.58016 L
156.86391 48.58016 L
156.86391 48.12406 L
157.04787 48.29216 157.24800 48.42822 157.47194 48.54019 C
157.69587 48.65216 157.93597 48.70828 158.19987 48.70828 C
158.70387 48.70828 159.09591 48.50816 159.37597 48.10819 C
159.65603 47.71616 159.79181 47.18806 159.79181 46.51625 C
@c
159.03184 46.43631 m
159.03184 46.93209 158.95191 47.31619 158.79203 47.59625 C
158.63981 47.86809 158.37591 48.00416 158.02384 48.00416 C
157.81606 48.00416 157.61594 47.95625 157.41581 47.86809 C
157.22391 47.77228 157.03994 47.65209 156.86391 47.50809 C
156.86391 45.03628 L
157.05581 44.94019 157.22391 44.87613 157.35997 44.84409 C
157.49603 44.81206 157.65591 44.79619 157.83194 44.79619 C
158.20781 44.79619 158.50403 44.93225 158.72003 45.21231 C
158.92781 45.49209 159.03184 45.90028 159.03184 46.43631 C
@c
162.44787 44.11616 m
161.75197 44.11616 161.21594 44.31628 160.83184 44.70831 C
160.44803 45.10006 160.25584 45.65225 160.25584 46.38019 C
160.25584 47.08431 160.44009 47.65209 160.81597 48.07616 C
161.18391 48.49228 161.67203 48.70828 162.27184 48.70828 C
162.54397 48.70828 162.78406 48.66831 162.99184 48.58809 C
163.19991 48.50816 163.38387 48.38825 163.54403 48.22016 C
163.69597 48.05206 163.81587 47.85222 163.89609 47.61213 C
163.98397 47.37231 164.02394 47.07609 164.02394 46.72431 C
164.02394 46.32406 L
160.99994 46.32406 L
160.99994 45.82006 161.12806 45.42831 161.38403 45.16413 C
161.64000 44.89228 161.99206 44.75622 162.43994 44.75622 C
162.60803 44.75622 162.75997 44.78031 162.91984 44.81206 C
163.07206 44.85231 163.21606 44.90022 163.33597 44.95606 C
163.47203 45.01219 163.58400 45.07625 163.67187 45.13209 C
163.76797 45.18822 163.83997 45.23613 163.89609 45.28431 C
163.94400 45.28431 L
163.94400 44.48409 L
163.85584 44.45206 163.75209 44.41209 163.62397 44.35625 C
163.49584 44.30806 163.38387 44.26809 163.27984 44.24428 C
163.13584 44.19609 163.00800 44.17228 162.88809 44.14819 C
162.77584 44.13231 162.62391 44.11616 162.44787 44.11616 C
@c
163.31187 46.89213 m
163.30394 47.08431 163.27984 47.26006 163.23987 47.40406 C
163.19991 47.54013 163.13584 47.66825 163.05591 47.76406 C
162.97597 47.87631 162.86400 47.95625 162.72794 48.01209 C
162.59187 48.06822 162.43200 48.10025 162.23187 48.10025 C
162.03997 48.10025 161.87187 48.06822 161.73609 48.01209 C
161.60003 47.95625 161.47191 47.86809 161.35994 47.75613 C
161.24797 47.64416 161.16803 47.51631 161.11191 47.37231 C
161.05606 47.23625 161.01609 47.07609 160.99994 46.89213 C
163.31187 46.89213 L
@c
168.19200 44.22019 m
167.45613 44.22019 L
167.45613 46.70816 L
167.45613 46.90828 167.44791 47.09225 167.43203 47.26828 C
167.40794 47.43609 167.37591 47.58009 167.32006 47.68413 C
167.25600 47.78816 167.17606 47.87631 167.07203 47.92422 C
166.96006 47.98006 166.81606 48.00416 166.63209 48.00416 C
166.44813 48.00416 166.26387 47.95625 166.06403 47.86016 C
165.87213 47.76406 165.67994 47.63622 165.49597 47.47606 C
165.49597 44.22019 L
164.76009 44.22019 L
164.76009 48.58016 L
165.49597 48.58016 L
165.49597 48.10025 L
165.71991 48.29216 165.93591 48.44409 166.14397 48.54813 C
166.35997 48.65216 166.58391 48.70828 166.82400 48.70828 C
167.25600 48.70828 167.59191 48.56428 167.83200 48.28422 C
168.07209 47.99622 168.19200 47.58831 168.19200 47.05228 C
168.19200 44.22019 L
@c
F

@rax %Note: Object
0.77868 105.45392 19.07490 111.65386 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
3.38683 105.46980 m
3.00274 105.46980 2.65861 105.53386 2.33858 105.66170 C
2.01883 105.78983 1.74671 105.98173 1.51483 106.22976 C
1.28268 106.48573 1.09871 106.79783 0.97058 107.17370 C
0.84274 107.54986 0.77868 107.98980 0.77868 108.47792 C
0.77868 108.96576 0.84274 109.38983 0.97058 109.74983 C
1.09077 110.10983 1.27474 110.42986 1.50661 110.69376 C
1.73877 110.95795 2.01061 111.15780 2.33065 111.29386 C
2.65068 111.42992 3.00274 111.49370 3.39477 111.49370 C
3.59461 111.49370 3.77858 111.48576 3.94668 111.45373 C
4.11477 111.42170 4.27465 111.38995 4.41865 111.34176 C
4.54677 111.30180 4.67461 111.25389 4.80274 111.19776 C
4.93880 111.14192 5.06665 111.07786 5.19477 111.00586 C
5.19477 110.06986 L
5.13071 110.06986 L
5.06665 110.13392 4.97877 110.20592 4.87474 110.29380 C
4.76277 110.38195 4.63465 110.46983 4.48271 110.55770 C
4.33077 110.63792 4.17061 110.70992 3.99458 110.75783 C
3.81883 110.81395 3.61871 110.83776 3.38683 110.83776 C
3.14674 110.83776 2.90665 110.78192 2.69065 110.68583 C
2.46671 110.58180 2.27480 110.42986 2.10671 110.23795 C
1.93861 110.03783 1.81077 109.78980 1.72261 109.48592 C
1.63474 109.18970 1.58683 108.85380 1.58683 108.47792 C
1.58683 108.07795 1.63474 107.73383 1.73083 107.44583 C
1.82665 107.15783 1.95477 106.91773 2.12258 106.71789 C
2.28274 106.52570 2.47465 106.38170 2.69858 106.28589 C
2.91458 106.18186 3.14674 106.13395 3.38683 106.13395 C
3.61077 106.13395 3.81883 106.16570 4.01074 106.22183 C
4.20265 106.26973 4.37074 106.34173 4.52268 106.42989 C
4.65874 106.50983 4.78658 106.58976 4.89061 106.67792 C
4.99465 106.75786 5.07458 106.82986 5.13865 106.89392 C
5.19477 106.89392 L
5.19477 105.96586 L
5.06665 105.90973 4.94674 105.85389 4.83477 105.79776 C
4.72280 105.74192 4.58674 105.68580 4.41865 105.63789 C
4.25083 105.58176 4.09861 105.54180 3.95461 105.50976 C
3.80268 105.48595 3.61871 105.46980 3.38683 105.46980 C
@c
6.61096 105.57383 m
5.87480 105.57383 L
5.87480 111.65386 L
6.61096 111.65386 L
6.61096 105.57383 L
@c
11.28274 107.75792 m
11.28274 107.02176 11.10699 106.45370 10.75493 106.05373 C
10.40287 105.65376 9.93090 105.45392 9.33874 105.45392 C
8.73099 105.45392 8.25874 105.66170 7.90696 106.06989 C
7.56283 106.48573 7.38680 107.04586 7.38680 107.75792 C
7.38680 108.48586 7.56283 109.04570 7.92283 109.45389 C
8.28283 109.85386 8.75480 110.06192 9.33874 110.06192 C
9.93090 110.06192 10.40287 109.85386 10.75493 109.45389 C
11.10699 109.05392 11.28274 108.48586 11.28274 107.75792 C
@c
10.52277 107.75792 m
10.52277 108.31776 10.42696 108.74183 10.21890 109.01395 C
10.01083 109.28580 9.72283 109.42980 9.33874 109.42980 C
8.95493 109.42980 8.65899 109.28580 8.45093 109.01395 C
8.25080 108.74183 8.14677 108.31776 8.14677 107.75792 C
8.14677 107.20573 8.25080 106.78989 8.45093 106.50983 C
8.65899 106.22976 8.95493 106.08576 9.33874 106.08576 C
9.71490 106.08576 10.01083 106.22183 10.21890 106.50189 C
10.42696 106.78195 10.52277 107.19780 10.52277 107.75792 C
@c
13.21909 105.46980 m
12.92287 105.46980 12.65102 105.50976 12.40299 105.58970 C
12.14702 105.66170 11.93896 105.74986 11.77087 105.83773 C
11.77087 106.66176 L
11.81083 106.66176 L
11.86696 106.61386 11.94690 106.55773 12.02683 106.49395 C
12.11499 106.43783 12.22696 106.37376 12.37096 106.30970 C
12.49087 106.25386 12.62693 106.19773 12.77887 106.15776 C
12.93109 106.10986 13.08302 106.09370 13.24290 106.09370 C
13.36309 106.09370 13.49093 106.10192 13.61906 106.13395 C
13.75483 106.15776 13.85093 106.18980 13.91499 106.23770 C
14.01109 106.29383 14.07487 106.35789 14.11483 106.42989 C
14.15509 106.49395 14.17890 106.59770 14.17890 106.73376 C
14.17890 106.90186 14.13099 107.03792 14.03490 107.12580 C
13.93909 107.21395 13.77099 107.28595 13.53090 107.34973 C
13.43509 107.37383 13.31490 107.39792 13.16296 107.42995 C
13.01102 107.46170 12.86702 107.49373 12.73890 107.53370 C
12.41093 107.62980 12.16290 107.77380 12.01890 107.98186 C
11.86696 108.18170 11.78702 108.42180 11.78702 108.70980 C
11.78702 109.10183 11.93896 109.42186 12.23490 109.66989 C
12.53083 109.91792 12.92287 110.04576 13.41893 110.04576 C
13.65902 110.04576 13.90706 110.01373 14.14687 109.94995 C
14.39490 109.89383 14.59502 109.82183 14.76283 109.72573 C
14.76283 108.94195 L
14.72287 108.94195 L
14.53890 109.09389 14.33083 109.20586 14.09896 109.29373 C
13.86709 109.38189 13.63493 109.42186 13.40306 109.42186 C
13.16296 109.42186 12.95490 109.37395 12.78709 109.26992 C
12.61899 109.16589 12.53906 109.01395 12.53906 108.80589 C
12.53906 108.62986 12.58696 108.49380 12.69099 108.39770 C
12.78709 108.30983 12.94696 108.23783 13.16296 108.18170 C
13.27493 108.14995 13.39483 108.12586 13.53090 108.09383 C
13.66696 108.06973 13.80302 108.03770 13.95496 107.99773 C
14.27499 107.91780 14.51509 107.78173 14.68290 107.59776 C
14.84306 107.41380 14.92299 107.15783 14.92299 106.82986 C
14.92299 106.64589 14.89096 106.46986 14.81102 106.30176 C
14.73902 106.13395 14.63499 105.98995 14.49099 105.86976 C
14.33083 105.73370 14.15509 105.63789 13.95496 105.56589 C
13.76306 105.50183 13.51502 105.46980 13.21909 105.46980 C
@c
17.49883 105.46980 m
16.80293 105.46980 16.26690 105.66992 15.88280 106.06195 C
15.49899 106.45370 15.30680 107.00589 15.30680 107.73383 C
15.30680 108.43795 15.49106 109.00573 15.86693 109.42980 C
16.23487 109.84592 16.72299 110.06192 17.32280 110.06192 C
17.59493 110.06192 17.83502 110.02195 18.04280 109.94173 C
18.25087 109.86180 18.43483 109.74189 18.59499 109.57380 C
18.74693 109.40570 18.86683 109.20586 18.94706 108.96576 C
19.03493 108.72595 19.07490 108.42973 19.07490 108.07795 C
19.07490 107.67770 L
16.05090 107.67770 L
16.05090 107.17370 16.17902 106.78195 16.43499 106.51776 C
16.69096 106.24592 17.04302 106.10986 17.49090 106.10986 C
17.65899 106.10986 17.81093 106.13395 17.97080 106.16570 C
18.12302 106.20595 18.26702 106.25386 18.38693 106.30970 C
18.52299 106.36583 18.63496 106.42989 18.72283 106.48573 C
18.81893 106.54186 18.89093 106.58976 18.94706 106.63795 C
18.99496 106.63795 L
18.99496 105.83773 L
18.90680 105.80570 18.80306 105.76573 18.67493 105.70989 C
18.54680 105.66170 18.43483 105.62173 18.33080 105.59792 C
18.18680 105.54973 18.05896 105.52592 17.93906 105.50183 C
17.82680 105.48595 17.67487 105.46980 17.49883 105.46980 C
@c
18.36283 108.24576 m
18.35490 108.43795 18.33080 108.61370 18.29083 108.75770 C
18.25087 108.89376 18.18680 109.02189 18.10687 109.11770 C
18.02693 109.22995 17.91496 109.30989 17.77890 109.36573 C
17.64283 109.42186 17.48296 109.45389 17.28283 109.45389 C
17.09093 109.45389 16.92283 109.42186 16.78706 109.36573 C
16.65099 109.30989 16.52287 109.22173 16.41090 109.10976 C
16.29893 108.99780 16.21899 108.86995 16.16287 108.72595 C
16.10702 108.58989 16.06706 108.42973 16.05090 108.24576 C
18.36283 108.24576 L
@c
F

@rax %Note: Object
150.19200 103.85972 168.48822 110.05965 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
152.80016 103.87559 m
152.41606 103.87559 152.07194 103.93965 151.75191 104.06750 C
151.43216 104.19562 151.16003 104.38753 150.92816 104.63556 C
150.69600 104.89153 150.51203 105.20362 150.38391 105.57950 C
150.25606 105.95565 150.19200 106.39559 150.19200 106.88372 C
150.19200 107.37156 150.25606 107.79562 150.38391 108.15562 C
150.50409 108.51562 150.68806 108.83565 150.91994 109.09956 C
151.15209 109.36375 151.42394 109.56359 151.74397 109.69965 C
152.06400 109.83572 152.41606 109.89950 152.80809 109.89950 C
153.00794 109.89950 153.19191 109.89156 153.36000 109.85953 C
153.52809 109.82750 153.68797 109.79575 153.83197 109.74756 C
153.96009 109.70759 154.08794 109.65969 154.21606 109.60356 C
154.35213 109.54772 154.47997 109.48365 154.60809 109.41165 C
154.60809 108.47565 L
154.54403 108.47565 L
154.47997 108.53972 154.39209 108.61172 154.28806 108.69959 C
154.17609 108.78775 154.04797 108.87562 153.89603 108.96350 C
153.74409 109.04372 153.58394 109.11572 153.40791 109.16362 C
153.23216 109.21975 153.03203 109.24356 152.80016 109.24356 C
152.56006 109.24356 152.31997 109.18772 152.10397 109.09162 C
151.88003 108.98759 151.68813 108.83565 151.52003 108.64375 C
151.35194 108.44362 151.22409 108.19559 151.13594 107.89172 C
151.04806 107.59550 151.00016 107.25959 151.00016 106.88372 C
151.00016 106.48375 151.04806 106.13962 151.14416 105.85162 C
151.23997 105.56362 151.36809 105.32353 151.53591 105.12369 C
151.69606 104.93150 151.88797 104.78750 152.11191 104.69169 C
152.32791 104.58765 152.56006 104.53975 152.80016 104.53975 C
153.02409 104.53975 153.23216 104.57150 153.42406 104.62762 C
153.61597 104.67553 153.78406 104.74753 153.93600 104.83569 C
154.07206 104.91562 154.19991 104.99556 154.30394 105.08372 C
154.40797 105.16365 154.48791 105.23565 154.55197 105.29972 C
154.60809 105.29972 L
154.60809 104.37165 L
154.47997 104.31553 154.36006 104.25969 154.24809 104.20356 C
154.13613 104.14772 154.00006 104.09159 153.83197 104.04369 C
153.66416 103.98756 153.51194 103.94759 153.36794 103.91556 C
153.21600 103.89175 153.03203 103.87559 152.80016 103.87559 C
@c
156.02428 103.97962 m
155.28813 103.97962 L
155.28813 110.05965 L
156.02428 110.05965 L
156.02428 103.97962 L
@c
160.69606 106.16372 m
160.69606 105.42756 160.52031 104.85950 160.16825 104.45953 C
159.81619 104.05956 159.34422 103.85972 158.75206 103.85972 C
158.14431 103.85972 157.67206 104.06750 157.32028 104.47569 C
156.97616 104.89153 156.80013 105.45165 156.80013 106.16372 C
156.80013 106.89165 156.97616 107.45150 157.33616 107.85969 C
157.69616 108.25965 158.16813 108.46772 158.75206 108.46772 C
159.34422 108.46772 159.81619 108.25965 160.16825 107.85969 C
160.52031 107.45972 160.69606 106.89165 160.69606 106.16372 C
@c
159.93609 106.16372 m
159.93609 106.72356 159.84028 107.14762 159.63222 107.41975 C
159.42416 107.69159 159.13616 107.83559 158.75206 107.83559 C
158.36825 107.83559 158.07231 107.69159 157.86425 107.41975 C
157.66413 107.14762 157.56009 106.72356 157.56009 106.16372 C
157.56009 105.61153 157.66413 105.19569 157.86425 104.91562 C
158.07231 104.63556 158.36825 104.49156 158.75206 104.49156 C
159.12822 104.49156 159.42416 104.62762 159.63222 104.90769 C
159.84028 105.18775 159.93609 105.60359 159.93609 106.16372 C
@c
162.63241 103.87559 m
162.33619 103.87559 162.06435 103.91556 161.81631 103.99550 C
161.56035 104.06750 161.35228 104.15565 161.18419 104.24353 C
161.18419 105.06756 L
161.22416 105.06756 L
161.28028 105.01965 161.36022 104.96353 161.44016 104.89975 C
161.52831 104.84362 161.64028 104.77956 161.78428 104.71550 C
161.90419 104.65965 162.04025 104.60353 162.19219 104.56356 C
162.34441 104.51565 162.49635 104.49950 162.65622 104.49950 C
162.77641 104.49950 162.90425 104.50772 163.03238 104.53975 C
163.16816 104.56356 163.26425 104.59559 163.32831 104.64350 C
163.42441 104.69962 163.48819 104.76369 163.52816 104.83569 C
163.56841 104.89975 163.59222 105.00350 163.59222 105.13956 C
163.59222 105.30765 163.54431 105.44372 163.44822 105.53159 C
163.35241 105.61975 163.18431 105.69175 162.94422 105.75553 C
162.84841 105.77962 162.72822 105.80372 162.57628 105.83575 C
162.42435 105.86750 162.28035 105.89953 162.15222 105.93950 C
161.82425 106.03559 161.57622 106.17959 161.43222 106.38765 C
161.28028 106.58750 161.20035 106.82759 161.20035 107.11559 C
161.20035 107.50762 161.35228 107.82765 161.64822 108.07569 C
161.94416 108.32372 162.33619 108.45156 162.83225 108.45156 C
163.07235 108.45156 163.32038 108.41953 163.56019 108.35575 C
163.80822 108.29962 164.00835 108.22762 164.17616 108.13153 C
164.17616 107.34775 L
164.13619 107.34775 L
163.95222 107.49969 163.74416 107.61165 163.51228 107.69953 C
163.28041 107.78769 163.04825 107.82765 162.81638 107.82765 C
162.57628 107.82765 162.36822 107.77975 162.20041 107.67572 C
162.03231 107.57169 161.95238 107.41975 161.95238 107.21169 C
161.95238 107.03565 162.00028 106.89959 162.10431 106.80350 C
162.20041 106.71562 162.36028 106.64362 162.57628 106.58750 C
162.68825 106.55575 162.80816 106.53165 162.94422 106.49962 C
163.08028 106.47553 163.21635 106.44350 163.36828 106.40353 C
163.68831 106.32359 163.92841 106.18753 164.09622 106.00356 C
164.25638 105.81959 164.33631 105.56362 164.33631 105.23565 C
164.33631 105.05169 164.30428 104.87565 164.22435 104.70756 C
164.15235 104.53975 164.04831 104.39575 163.90431 104.27556 C
163.74416 104.13950 163.56841 104.04369 163.36828 103.97169 C
163.17638 103.90762 162.92835 103.87559 162.63241 103.87559 C
@c
166.91216 103.87559 m
166.21625 103.87559 165.68022 104.07572 165.29613 104.46775 C
164.91231 104.85950 164.72013 105.41169 164.72013 106.13962 C
164.72013 106.84375 164.90438 107.41153 165.28025 107.83559 C
165.64819 108.25172 166.13631 108.46772 166.73613 108.46772 C
167.00825 108.46772 167.24835 108.42775 167.45613 108.34753 C
167.66419 108.26759 167.84816 108.14769 168.00831 107.97959 C
168.16025 107.81150 168.28016 107.61165 168.36038 107.37156 C
168.44825 107.13175 168.48822 106.83553 168.48822 106.48375 C
168.48822 106.08350 L
165.46422 106.08350 L
165.46422 105.57950 165.59235 105.18775 165.84831 104.92356 C
166.10428 104.65172 166.45635 104.51565 166.90422 104.51565 C
167.07231 104.51565 167.22425 104.53975 167.38413 104.57150 C
167.53635 104.61175 167.68035 104.65965 167.80025 104.71550 C
167.93631 104.77162 168.04828 104.83569 168.13616 104.89153 C
168.23225 104.94765 168.30425 104.99556 168.36038 105.04375 C
168.40828 105.04375 L
168.40828 104.24353 L
168.32013 104.21150 168.21638 104.17153 168.08825 104.11569 C
167.96013 104.06750 167.84816 104.02753 167.74413 104.00372 C
167.60013 103.95553 167.47228 103.93172 167.35238 103.90762 C
167.24013 103.89175 167.08819 103.87559 166.91216 103.87559 C
@c
167.77616 106.65156 m
167.76822 106.84375 167.74413 107.01950 167.70416 107.16350 C
167.66419 107.29956 167.60013 107.42769 167.52019 107.52350 C
167.44025 107.63575 167.32828 107.71569 167.19222 107.77153 C
167.05616 107.82765 166.89628 107.85969 166.69616 107.85969 C
166.50425 107.85969 166.33616 107.82765 166.20038 107.77153 C
166.06431 107.71569 165.93619 107.62753 165.82422 107.51556 C
165.71225 107.40359 165.63231 107.27575 165.57619 107.13175 C
165.52035 106.99569 165.48038 106.83553 165.46422 106.65156 C
167.77616 106.65156 L
@c
F

%PopMappingMode
@rs
@gr @sm
@sv

 @gs spg @gr
%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel24Dict 24.0 0
%%EOF
